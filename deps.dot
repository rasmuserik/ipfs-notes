digraph dependencies {
interface_connection;
interface_peer_routing;
interface_peer_routing -> peer_id ;
interface_record_store;
interface_record_store -> ipld ;
interface_record_store -> multihashing ;
interface_stream_muxer;
interface_transport;
interface_transport -> multiaddr ;
ipld;
ipld -> multihashing ;
ipfs_drs;
ipfs_drs -> ipld ;
ipfs_drs -> libp2p_record ;
ipfs_drs -> merkledag_store ;
ipfs_drs -> multihashing ;
libp2p_kad_record_store;
libp2p_kad_record_store -> ipld ;
libp2p_kad_record_store -> libp2p_record ;
libp2p_kad_record_store -> multihashing ;
libp2p_kad_routing;
libp2p_mdns_discovery;
libp2p_mdns_discovery -> peer_info ;
libp2p_mdns_discovery -> peer_id ;
libp2p_mdns_discovery -> multiaddr ;
libp2p;
libp2p_ping;
libp2p_railing;
libp2p_railing -> peer_info ;
libp2p_railing -> peer_id ;
libp2p_railing -> multiaddr ;
libp2p_record;
libp2p_record -> multihashing ;
libp2p_record -> ipld ;
libp2p_spdy;
libp2p_spdy -> multistream_select ;
libp2p_swarm;
libp2p_swarm -> multiaddr ;
libp2p_swarm -> multistream_select ;
libp2p_swarm -> peer_id ;
libp2p_swarm -> peer_info ;
libp2p_tcp;
libp2p_tcp -> multiaddr ;
libp2p_utp;
libp2p_utp -> multiaddr ;
merkledag_store;
multistream_select;
peer_id;
peer_id -> multihashing ;
peer_info;
libp2p_website;
webcrypto;
js_ipfs;
js_ipfs -> ipfs_repo ;
js_ipfs -> peer_id ;
js_ipfs -> peer_info ;
ipfs_repo;
ipfs_repo -> multihashes ;
multiaddr;
multihashing;
multihashing -> multihashes ;
multihashing -> webcrypto ;
multihashes;
}
